<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.model.Exam">
    <id column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="start_code" jdbcType="INTEGER" property="startCode" />
    <result column="exam_statu" jdbcType="INTEGER" property="examStatu" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exam_id, exam_name, subject_id, start_time, end_time, start_code, exam_statu
  </sql>
  <select id="selectByExample" parameterType="com.model.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where exam_id = #{examId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where exam_id = #{examId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.Exam">
    insert into exam (exam_id, exam_name, subject_id, 
      start_time, end_time, start_code, 
      exam_statu)
    values (#{examId,jdbcType=INTEGER}, #{examName,jdbcType=VARCHAR}, #{subjectId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{startCode,jdbcType=INTEGER}, 
      #{examStatu,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        exam_id,
      </if>
      <if test="examName != null">
        exam_name,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="startCode != null">
        start_code,
      </if>
      <if test="examStatu != null">
        exam_statu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="examName != null">
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startCode != null">
        #{startCode,jdbcType=INTEGER},
      </if>
      <if test="examStatu != null">
        #{examStatu,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.examName != null">
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startCode != null">
        start_code = #{record.startCode,jdbcType=INTEGER},
      </if>
      <if test="record.examStatu != null">
        exam_statu = #{record.examStatu,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set exam_id = #{record.examId,jdbcType=INTEGER},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      start_code = #{record.startCode,jdbcType=INTEGER},
      exam_statu = #{record.examStatu,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Exam">
    update exam
    <set>
      <if test="examName != null">
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startCode != null">
        start_code = #{startCode,jdbcType=INTEGER},
      </if>
      <if test="examStatu != null">
        exam_statu = #{examStatu,jdbcType=INTEGER},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Exam">
    update exam
    set exam_name = #{examName,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      start_code = #{startCode,jdbcType=INTEGER},
      exam_statu = #{examStatu,jdbcType=INTEGER}
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
</mapper>